// SPDX-License-Identifier: Apache-2.0

/**
 * Authors: Moonstream Engineering (engineering@moonstream.to)
 * GitHub: https://github.com/bugout-dev/dao
 */

pragma solidity ^0.8.0;

import "./ReentrancyExploitable.sol";

contract ExploitContract is IMockContract {
    bool public shouldCallExploitableFunction = true;
    bool public shouldExploit;
    bool public didExploit = false;

    function setShouldExploit(bool _shouldExploit) external {
        shouldExploit = _shouldExploit;
    }

    function setShouldCallExploitableFunction(bool _shouldCall) external {
        shouldCallExploitableFunction = _shouldCall;
    }

    function notify() external {
        if (didExploit || !shouldExploit) {
            return;
        }
        ReentrancyExploitable caller = ReentrancyExploitable(msg.sender);
        didExploit = true;
        if (shouldCallExploitableFunction) {
            caller.claimWithoutGuard();
        } else {
            caller.claimWithGuard();
        }
    }

    function exploit(address exploitableContractAddress) external {
        didExploit = false;
        ReentrancyExploitable exploitable = ReentrancyExploitable(
            exploitableContractAddress
        );
        if (shouldCallExploitableFunction) {
            exploitable.claimWithoutGuard();
        } else {
            exploitable.claimWithGuard();
        }
    }
}
