// SPDX-License-Identifier: Apache-2.0

/**
 * Authors: Moonstream Engineering (engineering@moonstream.to)
 * GitHub: https://github.com/bugout-dev/dao
 */

pragma solidity ^0.8.0;

import "../../libraries/LibDiamond.sol";
import "./AppStorage.sol";
import "../../security/DiamondReentrancyGuard.sol";

interface IMockContract {
    function notify() external;
}

contract ReentrancyExploitable is DiamondReentrancyGuard {
    AppStorage internal s;

    function claimWithoutGuard() external {
        require(
            !s.claimed[msg.sender],
            "ReentrancyExploitable: already claimed"
        );
        s.counter++;
        IMockContract caller = IMockContract(msg.sender);
        caller.notify();
        s.claimed[msg.sender] = true;
    }

    function claimWithGuard() external diamondNonReentrant {
        require(
            !s.claimed[msg.sender],
            "ReentrancyExploitable: already claimed"
        );
        s.counter++;
        IMockContract caller = IMockContract(msg.sender);
        caller.notify();
        s.claimed[msg.sender] = true;
    }

    function getCounter() external view returns (uint256) {
        return s.counter;
    }
}
